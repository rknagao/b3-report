import numpy as np
import pandas as pd
import streamlit as st


if 'data' not in st.session_state:
    st.session_state['data_state'] = 'no data'
    st.session_state['data'] = None

def change_data_state():
    st.session_state['data_state'] = 'raw'
    st.success('Carregamento concluído.')
    
uploaded_files = st.file_uploader("Choose a file", accept_multiple_files=True, on_change=change_data_state)
#st.write(uploaded_files)

# Funções de ETL:

def etl(uploaded_files):
    '''
    Objetivo: centralizar e tratar múltiplos arquivos carregados.
    Input:
        - uploaded_files (BytesIO ?): relatórios de movimentação extraídos da B3.
    Output:
        - df_all (dataframe): arquivos convertidos em um único dataframe. 
    '''
    # Extração.
    for i in uploaded_files:
        # No primeiro caso criaremos um dataframe que consolidará todas as movimentações.
        if i == uploaded_files[0]:
            df_all = pd.DataFrame(columns=['Entrada/Saída', 'Data', 'Movimentação', 'Produto', 'Instituição',
                                            'Quantidade', 'Preço unitário', 'Valor da Operação'])           
        df = pd.read_excel(i)
        df_all = pd.concat([df_all, df], axis=0, ignore_index=True)

    # Tratamentos:
    # (a) Nome e dtype.
    df_all.columns = ['credito_ou_debito', 'data', 'movimento', 'ativo', 'corretora', 'qtd_abs', 'preco', 'valor_total_abs']
    df_all['data'] = pd.to_datetime(df_all['data'], format='%d/%m/%Y').dt.date
    df_all['preco'].replace('-', 0, inplace=True)
    df_all['valor_total_abs'].replace('-', 0, inplace=True)
    df_all = df_all.astype({'credito_ou_debito': str,
                            'movimento': str,
                            'ativo': str,
                            'corretora': str,
                            'qtd_abs': float,
                            'preco': float, 
                            'valor_total_abs': float
                            })

    # (b) Nova variável: classificação do ativo.
    df_all['tp_ativo'] = np.select(
        [
            (df_all['ativo'].str.upper()).str.contains('TESOURO'),
            df_all['ativo'].str.split(' - ', 0).str[0].str.len() == 5,
            df_all['ativo'].str.split(' - ', 0).str[0].str.len() == 6,
            df_all['ativo'].str.contains('DEB'),
            df_all['ativo'].str.contains('|'.join(['CDB', 'RDB', 'LCA', 'LCI']))
        ],
        [
            'Tipo 1: tesouro',
            'Tipo 2: ações',
            'Tipo 3: BDR',
            'Tipo 4: debêntures',
            'Tipo 5: renda fixa privada'
        ],'?'
    )

    # (c) Nova variável: ticker.
    df_all['ticker'] = np.select(
        [
            df_all['tp_ativo'] == 'Tipo 4: debêntures',
            df_all['tp_ativo'] == 'Tipo 5: renda fixa privada'
        ],
        [   
            df_all['ativo'].str[5:12],
            df_all['ativo'].str[5:17]
        ], df_all['ativo'].str.split(' - ').str[0]
    )

    # (d) Nova variável: variação na quantidade de ativos.
    df_all['qtd'] = df_all['qtd_abs'] * np.where(df_all['credito_ou_debito'] == 'Credito', 1, -1)

    # (e) Nova variável: variação na quantidade no valor total.
    df_all['valor_total'] = df_all['valor_total_abs'] * np.where(df_all['credito_ou_debito'] == 'Credito', 1, -1)

    # (f) Nova variável: data de competência.
    df_all['data_competencia'] = [i.replace(day=1) for i in df_all['data']]
    
    return df_all



if st.session_state['data_state'] == 'raw':
    #st.write('ftw')
    df_all = etl(uploaded_files)
    #st.write(df_all)
    st.session_state['data_state'] = 'clean'
    st.session_state['data'] = df_all

#st.markdown('-------')    
